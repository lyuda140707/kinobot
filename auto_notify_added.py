import asyncio
import os
from aiogram import Bot
from google_api import get_google_service
from dotenv import load_dotenv
from datetime import datetime
import time

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
SPREADSHEET_ID = os.getenv("SHEET_ID")

bot = Bot(token=BOT_TOKEN)

async def check_and_notify():
    service = get_google_service()
    sheet = service.spreadsheets()

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏
    reqs = sheet.values().get(
        spreadsheetId=SPREADSHEET_ID,
        range="–ó–∞–ø–∏—Ç–∏!A2:C1000"  # –ó –∑–∞–ø–∞—Å–æ–º, —â–æ–± —Ç–æ—á–Ω–æ –∑—á–∏—Ç–∞—Ç–∏ C
    ).execute().get("values", [])

    # –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤
    films = sheet.values().get(
        spreadsheetId=SPREADSHEET_ID,
        range="Sheet1!A2:A"
    ).execute().get("values", [])
    film_names = [f[0].strip().lower() for f in films if f]

    for i, row in enumerate(reqs):
        # –ú—ñ–Ω—ñ–º—É–º 2 —Å—Ç–æ–≤–ø—Ü—ñ: user_id —ñ film_name
        if len(row) < 2:
            continue

        user_id = row[0]
        film_name = row[1]
        status = row[2] if len(row) > 2 else ""

        # –õ–∏—à–µ —è–∫—â–æ —Å—Ç–∞—Ç—É—Å == "—á–µ–∫–∞—î"
        if status.strip().lower() != "—á–µ–∫–∞—î":
            print(f"‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω–æ —Ä—è–¥–æ–∫ {i+2} ‚Äî —Å—Ç–∞—Ç—É—Å –±—É–≤: '{status}'")
            continue


        if film_name.strip().lower() in film_names:
            row_number = i + 2
            try:
                msg = await bot.send_message(
                    chat_id=int(user_id),
                    text=f"üé¨ –§—ñ–ª—å–º *{film_name}* —É–∂–µ –¥–æ–¥–∞–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä —É –±–æ—Ç—ñ üòâ",
                    parse_mode="Markdown"
                )

                print(f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ: {film_name} ‚Üí {user_id}")

                # –ó–∞—á–µ–∫–∞—Ç–∏ 60 —Å–µ–∫ —ñ –≤–∏–¥–∞–ª–∏—Ç–∏
                await asyncio.sleep(60)
                try:
                    await bot.delete_message(chat_id=int(user_id), message_id=msg.message_id)
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

                # –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å
                print(f"üìù –û–Ω–æ–≤–ª—é—é —Å—Ç–∞—Ç—É—Å —É C{row_number} ‚Üí ‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ")
                sheet.values().update(
                    spreadsheetId=SPREADSHEET_ID,
                    range=f"–ó–∞–ø–∏—Ç–∏!C{row_number}",
                    valueInputOption="RAW",
                    body={"values": [[f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ {datetime.now().strftime('%d.%m %H:%M')}"]]}
                ).execute()

            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {user_id}: {e}")

if __name__ == "__main__":
    while True:
        try:
            asyncio.run(check_and_notify())
            print("‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ß–µ–∫–∞—é 5 —Ö–≤–∏–ª–∏–Ω...")
        except Exception as e:
            print(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")
        time.sleep(300)
