import asyncio
import os
from aiogram import Bot
from google_api import get_google_service  # —É —Ç–µ–±–µ –≤–∂–µ —î
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
SPREADSHEET_ID = os.getenv("SHEET_ID")

bot = Bot(token=BOT_TOKEN)

async def check_and_notify():
    service = get_google_service()
    sheet = service.spreadsheets()

    # 1. –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏
    reqs = sheet.values().get(spreadsheetId=SPREADSHEET_ID, range="–ó–∞–ø–∏—Ç–∏!A2:B").execute().get("values", [])
    # 2. –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤ —Ñ—ñ–ª—å–º—ñ–≤
    films = sheet.values().get(spreadsheetId=SPREADSHEET_ID, range="Sheet1!A2:A").execute().get("values", [])
    film_names = [f[0].strip().lower() for f in films if f]

    rows_to_delete = []

    for i, row in enumerate(reqs):
        if len(row) < 2:
            continue
        user_id, film_name = row[0], row[1]
        if film_name.strip().lower() in film_names:
            try:
                await bot.send_message(
                    chat_id=int(user_id),
                    text=f"üé¨ –§—ñ–ª—å–º *{film_name}* —É–∂–µ –¥–æ–¥–∞–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä —É –±–æ—Ç—ñ üòâ",
                    parse_mode="Markdown"
                )
                print(f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ: {film_name} ‚Üí {user_id}")
                rows_to_delete.append(i + 2)
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {user_id}: {e}")

    # 3. –û—á–∏—Å—Ç–∏—Ç–∏ –æ–±—Ä–æ–±–ª–µ–Ω—ñ –∑–∞–ø–∏—Ç–∏
    for row in reversed(rows_to_delete):
        sheet.values().clear(spreadsheetId=SPREADSHEET_ID, range=f"–ó–∞–ø–∏—Ç–∏!A{row}:B{row}").execute()

if __name__ == "__main__":
    asyncio.run(check_and_notify())
