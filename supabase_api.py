# supabase_api.py
import os
import requests

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_ANON = os.getenv("SUPABASE_ANON_KEY")

def _headers():
    return {
        "apikey": SUPABASE_ANON,
        "Authorization": f"Bearer {SUPABASE_ANON}",
    }



def get_films():
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —É –¢–í–û–Ñ–ú–£ —Ñ–æ—Ä–º–∞—Ç—ñ:
    '–ù–∞–∑–≤–∞','–¢–∏–ø','–ñ–∞–Ω—Ä','–û–ø–∏—Å','–§–æ—Ç–æ','IMDb','–î–æ–±—ñ—Ä–∫–∞','–î–æ—Å—Ç—É–ø','–ö—Ä–∞—ó–Ω–∞','–†—ñ–∫','message_id','–°–µ–∑–æ–Ω','–°–µ—Ä—ñ—è'
    """
    url = (
        f"{SUPABASE_URL}/rest/v1/films"
        "?select=title,type,genre,description,photo,message_id,collection,country,year,access,imdb,season,episode"
    )
    r = requests.get(url, headers=_headers(), timeout=20)
    r.raise_for_status()
    rows = r.json()
    return [
        {
            "–ù–∞–∑–≤–∞"     : row.get("title", "") or "",
            "–¢–∏–ø"       : row.get("type", "") or "",
            "–ñ–∞–Ω—Ä"      : row.get("genre", "") or "",
            "–û–ø–∏—Å"      : row.get("description", "") or "",
            "–§–æ—Ç–æ"      : row.get("photo", "") or "",
            "IMDb"      : row.get("imdb", "") or "",
            "–î–æ–±—ñ—Ä–∫–∞"   : row.get("collection", "") or "",
            "–î–æ—Å—Ç—É–ø"    : row.get("access", "") or "",
            "–ö—Ä–∞—ó–Ω–∞"    : row.get("country", "") or "",
            "–†—ñ–∫"       : row.get("year", "") or "",
            "message_id": row.get("message_id", "") or "",
            "–°–µ–∑–æ–Ω"     : row.get("season", "") or "",
            "–°–µ—Ä—ñ—è"     : row.get("episode", "") or "",
        }
        for row in rows
    ]
def sb_update_fileid_by_message_id(msg_id, file_id):
    """
    –û–Ω–æ–≤–ª—é—î –ø–æ–ª–µ file_id —É —Ç–∞–±–ª–∏—Ü—ñ 'films' –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ message_id (int8)
    """
    import requests
    import urllib.parse

    print(f"üß© [DEBUG] sb_update_fileid_by_message_id –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è message_id={msg_id}, file_id={file_id}")
    try:
        # ‚úÖ –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —É —á–∏—Å–ª–æ (–±–æ –≤ Supabase message_id ‚Äî int8)
        msg_id_int = int(msg_id)
        msg_q = urllib.parse.quote(str(msg_id_int))
        url = f"{SUPABASE_URL}/rest/v1/films?message_id=eq.{msg_q}"

        headers = {
            "apikey": SUPABASE_ANON,
            "Authorization": f"Bearer {SUPABASE_ANON}",
            "Content-Type": "application/json",
            "Prefer": "return=representation"
        }

        payload = {"file_id": file_id}
        r = requests.patch(url, headers=headers, json=payload, timeout=20)

        # üß† –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        if r.ok:
            print(f"‚úÖ [Supabase] –û–Ω–æ–≤–ª–µ–Ω–æ file_id –¥–ª—è message_id={msg_id_int}")
        else:
            print(f"‚ö†Ô∏è [Supabase] –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ({r.status_code}): {r.text}")

    except Exception as e:
        print(f"‚ùå [Supabase] –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: {e}")



# üöÄ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ Supabase –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    import requests

    print("üß© Testing Supabase connection...")
    try:
        url = f"{SUPABASE_URL}/rest/v1/films?select=message_id&limit=1"
        headers = {
            "apikey": SUPABASE_ANON,
            "Authorization": f"Bearer {SUPABASE_ANON}"
        }
        r = requests.get(url, headers=headers, timeout=10)
        if r.status_code == 200:
            print("‚úÖ Supabase –¥–æ—Å—Ç—É–ø–Ω–∏–π ‚Äî –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–∞—Ü—é—î.")
        else:
            print(f"‚ö†Ô∏è Supabase –≤—ñ–¥–ø–æ–≤—ñ–≤ –ø–æ–º–∏–ª–∫–æ—é ({r.status_code}): {r.text}")
    except Exception as e:
        print(f"‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ Supabase: {e}")

